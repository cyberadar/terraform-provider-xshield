// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DatatypesType string

const (
	DatatypesTypeString    DatatypesType = "String"
	DatatypesTypeTimestamp DatatypesType = "Timestamp"
	DatatypesTypeNumeric   DatatypesType = "Numeric"
	DatatypesTypeInet      DatatypesType = "Inet"
	DatatypesTypeBoolean   DatatypesType = "Boolean"
	DatatypesTypeSemVer    DatatypesType = "SemVer"
)

func (e DatatypesType) ToPointer() *DatatypesType {
	return &e
}
func (e *DatatypesType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "String":
		fallthrough
	case "Timestamp":
		fallthrough
	case "Numeric":
		fallthrough
	case "Inet":
		fallthrough
	case "Boolean":
		fallthrough
	case "SemVer":
		*e = DatatypesType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DatatypesType: %v", v)
	}
}
