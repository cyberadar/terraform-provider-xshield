// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy/terraform-provider-xshield-sdk/internal/sdk/internal/utils"
	"time"
)

type OpenPort struct {
	BandwidthInBytes         *int64  `json:"bandwidthInBytes,omitempty"`
	BandwidthInBytesSeries   []int64 `json:"bandwidthInBytesSeries,omitempty"`
	ConnectionCount          *int64  `json:"connectionCount,omitempty"`
	ConnectionCountSeries    []int64 `json:"connectionCountSeries,omitempty"`
	InternetBandwidthInBytes *int64  `json:"internetBandwidthInBytes,omitempty"`
	InternetPathCount        *int64  `json:"internetPathCount,omitempty"`
	IntranetBandwidthInBytes *int64  `json:"intranetBandwidthInBytes,omitempty"`
	// AssetSummary definition Summary of host or application running on a host that can be observed to apply segmentation policies against
	ListenAsset                *AssetSummary       `json:"listenAsset,omitempty"`
	ListenPort                 *string             `json:"listenPort,omitempty"`
	ListenPortEnforced         *string             `json:"listenPortEnforced,omitempty"`
	ListenPortLastObserved     *time.Time          `json:"listenPortLastObserved,omitempty"`
	ListenPortName             *string             `json:"listenPortName,omitempty"`
	ListenPortProtocol         *string             `json:"listenPortProtocol,omitempty"`
	ListenPortReviewed         *string             `json:"listenPortReviewed,omitempty"`
	ListenProcessNames         []string            `json:"listenProcessNames,omitempty"`
	ListenProcessPaths         []string            `json:"listenProcessPaths,omitempty"`
	Listeningonpublicinterface *bool               `json:"listeningonpublicinterface,omitempty"`
	LpID                       *string             `json:"lpId,omitempty"`
	MatchedByTemplates         []TemplateReference `json:"matchedByTemplates,omitempty"`
	PathCount                  *int64              `json:"pathCount,omitempty"`
	TotalComments              *int64              `json:"totalComments,omitempty"`
}

func (o OpenPort) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *OpenPort) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *OpenPort) GetBandwidthInBytes() *int64 {
	if o == nil {
		return nil
	}
	return o.BandwidthInBytes
}

func (o *OpenPort) GetBandwidthInBytesSeries() []int64 {
	if o == nil {
		return nil
	}
	return o.BandwidthInBytesSeries
}

func (o *OpenPort) GetConnectionCount() *int64 {
	if o == nil {
		return nil
	}
	return o.ConnectionCount
}

func (o *OpenPort) GetConnectionCountSeries() []int64 {
	if o == nil {
		return nil
	}
	return o.ConnectionCountSeries
}

func (o *OpenPort) GetInternetBandwidthInBytes() *int64 {
	if o == nil {
		return nil
	}
	return o.InternetBandwidthInBytes
}

func (o *OpenPort) GetInternetPathCount() *int64 {
	if o == nil {
		return nil
	}
	return o.InternetPathCount
}

func (o *OpenPort) GetIntranetBandwidthInBytes() *int64 {
	if o == nil {
		return nil
	}
	return o.IntranetBandwidthInBytes
}

func (o *OpenPort) GetListenAsset() *AssetSummary {
	if o == nil {
		return nil
	}
	return o.ListenAsset
}

func (o *OpenPort) GetListenPort() *string {
	if o == nil {
		return nil
	}
	return o.ListenPort
}

func (o *OpenPort) GetListenPortEnforced() *string {
	if o == nil {
		return nil
	}
	return o.ListenPortEnforced
}

func (o *OpenPort) GetListenPortLastObserved() *time.Time {
	if o == nil {
		return nil
	}
	return o.ListenPortLastObserved
}

func (o *OpenPort) GetListenPortName() *string {
	if o == nil {
		return nil
	}
	return o.ListenPortName
}

func (o *OpenPort) GetListenPortProtocol() *string {
	if o == nil {
		return nil
	}
	return o.ListenPortProtocol
}

func (o *OpenPort) GetListenPortReviewed() *string {
	if o == nil {
		return nil
	}
	return o.ListenPortReviewed
}

func (o *OpenPort) GetListenProcessNames() []string {
	if o == nil {
		return nil
	}
	return o.ListenProcessNames
}

func (o *OpenPort) GetListenProcessPaths() []string {
	if o == nil {
		return nil
	}
	return o.ListenProcessPaths
}

func (o *OpenPort) GetListeningonpublicinterface() *bool {
	if o == nil {
		return nil
	}
	return o.Listeningonpublicinterface
}

func (o *OpenPort) GetLpID() *string {
	if o == nil {
		return nil
	}
	return o.LpID
}

func (o *OpenPort) GetMatchedByTemplates() []TemplateReference {
	if o == nil {
		return nil
	}
	return o.MatchedByTemplates
}

func (o *OpenPort) GetPathCount() *int64 {
	if o == nil {
		return nil
	}
	return o.PathCount
}

func (o *OpenPort) GetTotalComments() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalComments
}
