// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BusinessValue string

const (
	BusinessValueHigh   BusinessValue = "high"
	BusinessValueMedium BusinessValue = "medium"
	BusinessValueLow    BusinessValue = "low"
)

func (e BusinessValue) ToPointer() *BusinessValue {
	return &e
}
func (e *BusinessValue) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "high":
		fallthrough
	case "medium":
		fallthrough
	case "low":
		*e = BusinessValue(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BusinessValue: %v", v)
	}
}

// AssetAnnotationDetails definition Allows update/setting of user modifiable attributes for an asset.
type AssetAnnotationDetails struct {
	AssetName     *string           `json:"assetName,omitempty"`
	BusinessValue *BusinessValue    `json:"businessValue,omitempty"`
	CoreTags      map[string]string `json:"coreTags,omitempty"`
	OsName        *string           `json:"osName,omitempty"`
	VendorInfo    *string           `json:"vendorInfo,omitempty"`
}

func (o *AssetAnnotationDetails) GetAssetName() *string {
	if o == nil {
		return nil
	}
	return o.AssetName
}

func (o *AssetAnnotationDetails) GetBusinessValue() *BusinessValue {
	if o == nil {
		return nil
	}
	return o.BusinessValue
}

func (o *AssetAnnotationDetails) GetCoreTags() map[string]string {
	if o == nil {
		return nil
	}
	return o.CoreTags
}

func (o *AssetAnnotationDetails) GetOsName() *string {
	if o == nil {
		return nil
	}
	return o.OsName
}

func (o *AssetAnnotationDetails) GetVendorInfo() *string {
	if o == nil {
		return nil
	}
	return o.VendorInfo
}
