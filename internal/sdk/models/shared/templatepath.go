// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type TemplatePath struct {
	ChannelHash *string `json:"channelHash,omitempty"`
	// AssetSummary definition Summary of host or application running on a host that can be observed to apply segmentation policies against
	DestinationAsset          *AssetSummary                    `json:"destinationAsset,omitempty"`
	DestinationNamedNetwork   *MetadataNamedNetworkReference   `json:"destinationNamedNetwork,omitempty"`
	DestinationProcess        *string                          `json:"destinationProcess,omitempty"`
	DestinationTagBasedPolicy *MetadataTagBasedPolicyReference `json:"destinationTagBasedPolicy,omitempty"`
	Direction                 *string                          `json:"direction,omitempty"`
	Domain                    *string                          `json:"domain,omitempty"`
	DstIP                     []string                         `json:"dstIp,omitempty"`
	Method                    *string                          `json:"method,omitempty"`
	Port                      *string                          `json:"port,omitempty"`
	PortName                  *string                          `json:"portName,omitempty"`
	Protocol                  *string                          `json:"protocol,omitempty"`
	// AssetSummary definition Summary of host or application running on a host that can be observed to apply segmentation policies against
	SourceAsset          *AssetSummary                    `json:"sourceAsset,omitempty"`
	SourceNamedNetwork   *MetadataNamedNetworkReference   `json:"sourceNamedNetwork,omitempty"`
	SourceProcess        *string                          `json:"sourceProcess,omitempty"`
	SourceTagBasedPolicy *MetadataTagBasedPolicyReference `json:"sourceTagBasedPolicy,omitempty"`
	SrcIP                *string                          `json:"srcIp,omitempty"`
	URI                  *string                          `json:"uri,omitempty"`
}

func (o *TemplatePath) GetChannelHash() *string {
	if o == nil {
		return nil
	}
	return o.ChannelHash
}

func (o *TemplatePath) GetDestinationAsset() *AssetSummary {
	if o == nil {
		return nil
	}
	return o.DestinationAsset
}

func (o *TemplatePath) GetDestinationNamedNetwork() *MetadataNamedNetworkReference {
	if o == nil {
		return nil
	}
	return o.DestinationNamedNetwork
}

func (o *TemplatePath) GetDestinationProcess() *string {
	if o == nil {
		return nil
	}
	return o.DestinationProcess
}

func (o *TemplatePath) GetDestinationTagBasedPolicy() *MetadataTagBasedPolicyReference {
	if o == nil {
		return nil
	}
	return o.DestinationTagBasedPolicy
}

func (o *TemplatePath) GetDirection() *string {
	if o == nil {
		return nil
	}
	return o.Direction
}

func (o *TemplatePath) GetDomain() *string {
	if o == nil {
		return nil
	}
	return o.Domain
}

func (o *TemplatePath) GetDstIP() []string {
	if o == nil {
		return nil
	}
	return o.DstIP
}

func (o *TemplatePath) GetMethod() *string {
	if o == nil {
		return nil
	}
	return o.Method
}

func (o *TemplatePath) GetPort() *string {
	if o == nil {
		return nil
	}
	return o.Port
}

func (o *TemplatePath) GetPortName() *string {
	if o == nil {
		return nil
	}
	return o.PortName
}

func (o *TemplatePath) GetProtocol() *string {
	if o == nil {
		return nil
	}
	return o.Protocol
}

func (o *TemplatePath) GetSourceAsset() *AssetSummary {
	if o == nil {
		return nil
	}
	return o.SourceAsset
}

func (o *TemplatePath) GetSourceNamedNetwork() *MetadataNamedNetworkReference {
	if o == nil {
		return nil
	}
	return o.SourceNamedNetwork
}

func (o *TemplatePath) GetSourceProcess() *string {
	if o == nil {
		return nil
	}
	return o.SourceProcess
}

func (o *TemplatePath) GetSourceTagBasedPolicy() *MetadataTagBasedPolicyReference {
	if o == nil {
		return nil
	}
	return o.SourceTagBasedPolicy
}

func (o *TemplatePath) GetSrcIP() *string {
	if o == nil {
		return nil
	}
	return o.SrcIP
}

func (o *TemplatePath) GetURI() *string {
	if o == nil {
		return nil
	}
	return o.URI
}
