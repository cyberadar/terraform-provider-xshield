// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type TagRule struct {
	MatchingAssets  *int64            `json:"matchingAssets,omitempty"`
	OnMatch         map[string]string `json:"onMatch,omitempty"`
	RuleCriteria    string            `json:"ruleCriteria"`
	RuleDescription *string           `json:"ruleDescription,omitempty"`
	RuleEnabled     *bool             `json:"ruleEnabled,omitempty"`
	ID              *string           `json:"ruleId,omitempty"`
	RuleName        *string           `json:"ruleName,omitempty"`
}

func (o *TagRule) GetMatchingAssets() *int64 {
	if o == nil {
		return nil
	}
	return o.MatchingAssets
}

func (o *TagRule) GetOnMatch() map[string]string {
	if o == nil {
		return nil
	}
	return o.OnMatch
}

func (o *TagRule) GetRuleCriteria() string {
	if o == nil {
		return ""
	}
	return o.RuleCriteria
}

func (o *TagRule) GetRuleDescription() *string {
	if o == nil {
		return nil
	}
	return o.RuleDescription
}

func (o *TagRule) GetRuleEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.RuleEnabled
}

func (o *TagRule) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TagRule) GetRuleName() *string {
	if o == nil {
		return nil
	}
	return o.RuleName
}
