// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type UserGroupHit struct {
	Direction          *string  `json:"direction,omitempty"`
	LastHitObserved    *string  `json:"lastHitObserved,omitempty"`
	PeerAssetID        *string  `json:"peerAssetId,omitempty"`
	PeerDomain         *string  `json:"peerDomain,omitempty"`
	PeerIps            []string `json:"peerIps,omitempty"`
	PeerNamedNetworkID *string  `json:"peerNamedNetworkId,omitempty"`
	Port               *string  `json:"port,omitempty"`
	Protocol           *string  `json:"protocol,omitempty"`
	// AssetSummary definition Summary of host or application running on a host that can be observed to apply segmentation policies against
	UserGroup *AssetSummary `json:"userGroup,omitempty"`
	UserName  *string       `json:"userName,omitempty"`
}

func (o *UserGroupHit) GetDirection() *string {
	if o == nil {
		return nil
	}
	return o.Direction
}

func (o *UserGroupHit) GetLastHitObserved() *string {
	if o == nil {
		return nil
	}
	return o.LastHitObserved
}

func (o *UserGroupHit) GetPeerAssetID() *string {
	if o == nil {
		return nil
	}
	return o.PeerAssetID
}

func (o *UserGroupHit) GetPeerDomain() *string {
	if o == nil {
		return nil
	}
	return o.PeerDomain
}

func (o *UserGroupHit) GetPeerIps() []string {
	if o == nil {
		return nil
	}
	return o.PeerIps
}

func (o *UserGroupHit) GetPeerNamedNetworkID() *string {
	if o == nil {
		return nil
	}
	return o.PeerNamedNetworkID
}

func (o *UserGroupHit) GetPort() *string {
	if o == nil {
		return nil
	}
	return o.Port
}

func (o *UserGroupHit) GetProtocol() *string {
	if o == nil {
		return nil
	}
	return o.Protocol
}

func (o *UserGroupHit) GetUserGroup() *AssetSummary {
	if o == nil {
		return nil
	}
	return o.UserGroup
}

func (o *UserGroupHit) GetUserName() *string {
	if o == nil {
		return nil
	}
	return o.UserName
}
