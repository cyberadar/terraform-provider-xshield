// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type TagRuleInput struct {
	OnMatch              map[string]string `json:"onMatch,omitempty"`
	RuleCriteria         string            `json:"ruleCriteria"`
	RuleCriteriaAsParams *string           `json:"ruleCriteriaAsParams,omitempty"`
	RuleDescription      *string           `json:"ruleDescription,omitempty"`
	RuleEnabled          *bool             `json:"ruleEnabled,omitempty"`
	RuleName             *string           `json:"ruleName,omitempty"`
}

func (o *TagRuleInput) GetOnMatch() map[string]string {
	if o == nil {
		return nil
	}
	return o.OnMatch
}

func (o *TagRuleInput) GetRuleCriteria() string {
	if o == nil {
		return ""
	}
	return o.RuleCriteria
}

func (o *TagRuleInput) GetRuleCriteriaAsParams() *string {
	if o == nil {
		return nil
	}
	return o.RuleCriteriaAsParams
}

func (o *TagRuleInput) GetRuleDescription() *string {
	if o == nil {
		return nil
	}
	return o.RuleDescription
}

func (o *TagRuleInput) GetRuleEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.RuleEnabled
}

func (o *TagRuleInput) GetRuleName() *string {
	if o == nil {
		return nil
	}
	return o.RuleName
}
