// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AssetStateTransitionSearchInputInboundToState string

const (
	AssetStateTransitionSearchInputInboundToStateUnsecured           AssetStateTransitionSearchInputInboundToState = "unsecured"
	AssetStateTransitionSearchInputInboundToStateSecureInternetPorts AssetStateTransitionSearchInputInboundToState = "secure-internet-ports"
	AssetStateTransitionSearchInputInboundToStateSecureAllPorts      AssetStateTransitionSearchInputInboundToState = "secure-all-ports"
	AssetStateTransitionSearchInputInboundToStateSecureInboundPaths  AssetStateTransitionSearchInputInboundToState = "secure-inbound-paths"
)

func (e AssetStateTransitionSearchInputInboundToState) ToPointer() *AssetStateTransitionSearchInputInboundToState {
	return &e
}
func (e *AssetStateTransitionSearchInputInboundToState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unsecured":
		fallthrough
	case "secure-internet-ports":
		fallthrough
	case "secure-all-ports":
		fallthrough
	case "secure-inbound-paths":
		*e = AssetStateTransitionSearchInputInboundToState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssetStateTransitionSearchInputInboundToState: %v", v)
	}
}

type AssetStateTransitionSearchInputOutboundToState string

const (
	AssetStateTransitionSearchInputOutboundToStateUnsecured           AssetStateTransitionSearchInputOutboundToState = "unsecured"
	AssetStateTransitionSearchInputOutboundToStateSecureInternetPaths AssetStateTransitionSearchInputOutboundToState = "secure-internet-paths"
	AssetStateTransitionSearchInputOutboundToStateSecureIntranetPaths AssetStateTransitionSearchInputOutboundToState = "secure-intranet-paths"
)

func (e AssetStateTransitionSearchInputOutboundToState) ToPointer() *AssetStateTransitionSearchInputOutboundToState {
	return &e
}
func (e *AssetStateTransitionSearchInputOutboundToState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unsecured":
		fallthrough
	case "secure-internet-paths":
		fallthrough
	case "secure-intranet-paths":
		*e = AssetStateTransitionSearchInputOutboundToState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssetStateTransitionSearchInputOutboundToState: %v", v)
	}
}

type AssetStateTransitionSearchInput struct {
	Comment         *string                                         `json:"comment,omitempty"`
	Criteria        string                                          `json:"criteria"`
	InboundToState  *AssetStateTransitionSearchInputInboundToState  `json:"inboundToState,omitempty"`
	OutboundToState *AssetStateTransitionSearchInputOutboundToState `json:"outboundToState,omitempty"`
}

func (o *AssetStateTransitionSearchInput) GetComment() *string {
	if o == nil {
		return nil
	}
	return o.Comment
}

func (o *AssetStateTransitionSearchInput) GetCriteria() string {
	if o == nil {
		return ""
	}
	return o.Criteria
}

func (o *AssetStateTransitionSearchInput) GetInboundToState() *AssetStateTransitionSearchInputInboundToState {
	if o == nil {
		return nil
	}
	return o.InboundToState
}

func (o *AssetStateTransitionSearchInput) GetOutboundToState() *AssetStateTransitionSearchInputOutboundToState {
	if o == nil {
		return nil
	}
	return o.OutboundToState
}
