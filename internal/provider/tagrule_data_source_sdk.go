// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"github.com/colortokens/terraform-provider-xshield/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *TagRuleDataSourceModel) RefreshFromSharedTagRule(resp *shared.TagRule) {
	if resp != nil {
		r.ID = types.StringPointerValue(resp.ID)
		r.MatchingAssets = types.Int64PointerValue(resp.MatchingAssets)
		if len(resp.OnMatch) > 0 {
			r.OnMatch = make(map[string]types.String)
			for key, value := range resp.OnMatch {
				r.OnMatch[key] = types.StringValue(value)
			}
		}
		r.RuleCriteria = types.StringValue(resp.RuleCriteria)
		r.RuleDescription = types.StringPointerValue(resp.RuleDescription)
		r.RuleEnabled = types.BoolPointerValue(resp.RuleEnabled)
		r.RuleName = types.StringPointerValue(resp.RuleName)
	}
}
